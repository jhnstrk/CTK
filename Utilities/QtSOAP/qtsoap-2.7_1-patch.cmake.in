# the patch step is run before the update step
# so we need to checkout the 1.0 branch here

set(work_dir @ep_source_dir@)
set(proj_dir ${work_dir}/@proj@)

#Apply license
FILE(WRITE "${proj_dir}/.licenseAccepted" "license accepted\n")

INCLUDE(@CTK_SOURCE_DIR@/CMake/ctkFunctionLFtoCRLF.cmake)
INCLUDE(@CTK_SOURCE_DIR@/CMake/ctkFunctionApplyPatches.cmake)

SET(patch_dir @CTK_SOURCE_DIR@/Utilities/@proj@)
SET(configured_patch_dir @qtsoap_configured_patch_dir@)

# Variable required to properly configured the patch files
SET(QT_BINARY_DIR @QT_BINARY_DIR@)

SET(patch_files
    ${patch_dir}/qtsoap.h.patch
    ${patch_dir}/qtsoap.cpp.patch
)


# Apply patches
ctkFunctionApplyPatches("@CTK_PATCH_EXECUTABLE@" "${proj_dir}/src" "${patch_files}")

IF(UNIX)

  # replace all occurences of 'qmake' with the aboslute path to the
  # qmake executable found by CMake.
  # This is neccessary for custom Qt builds and for Unix/Linux systems
  # which use another name for the Qt4 qmake program (e.g. qmake-qt4)

  EXECUTE_PROCESS(
    COMMAND sed -i -e  "s+qmake +@QT_QMAKE_EXECUTABLE@ +g" configure
    WORKING_DIRECTORY ${proj_dir}
    RESULT_VARIABLE error_code
  )

  IF(error_code)
    MESSAGE(FATAL_ERROR "Patching ${proj_dir}/configure file failed.")
  ENDIF()
ENDIF()

